name: Nightly MM Build

on:
    schedule:
      - cron: '30 1 * * *'
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        wget https://github.com/MoonModules/WLED/archive/refs/heads/mdev.zip -O /tmp/mm.zip
        unzip /tmp/mm.zip -d /tmp
    - name: Run PlatformIO
      run: |
        cd /tmp/WLED-mdev
        pio run -e esp32_4MB_max
        mkdir output_gh_pages
        mkdir output_gh_pages/bin_dir
        mkdir output_gh_pages/bin_dir/3_MoonMod_version
        mkdir output_gh_pages/bin_dir/3_MoonMod_version/NightlyBuild
        cp $(find ./build_output/release -name *max.bin) ./output_gh_pages/bin_dir/3_MoonMod_version/NightlyBuild/WLEDMM_NightlyBuild_esp32_max.bin
      env:
        PLATFORMIO_CI_SRC: /tmp/WLED-mdev
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output_gh_pages/
        keep_files: true
